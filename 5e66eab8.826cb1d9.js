(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{126:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return g}));var s=n(0),a=n.n(s);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),p=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=p(n),b=s,g=d["".concat(o,".").concat(b)]||d[b]||u[b]||r;return n?a.a.createElement(g,l(l({ref:t},i),{},{components:n})):a.a.createElement(g,l({ref:t},i))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var i=2;i<r;i++)o[i]=n[i];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var s=n(3),a=n(7),r=(n(0),n(126)),o={id:"extend-stylesheet",title:"Extend Stylable Stylesheet"},l={unversionedId:"references/extend-stylesheet",id:"references/extend-stylesheet",isDocsHomePage:!1,title:"Extend Stylable Stylesheet",description:"Use the -st-extends directive rule to extend a CSS class with another stylesheet. This enables you to style pseudo-classes and pseudo-elements of the extended stylesheet.",source:"@site/docs/references/extend-stylesheet.md",slug:"/references/extend-stylesheet",permalink:"/stylable.io/docs/references/extend-stylesheet",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/extend-stylesheet.md",version:"current",sidebar:"someSidebar",previous:{title:"CSS Tag/Component Selector",permalink:"/stylable.io/docs/references/tag-selectors"},next:{title:"Pseudo-Classes",permalink:"/stylable.io/docs/references/pseudo-classes"}},c=[{value:"Extending stylesheets vs. classes",id:"extending-stylesheets-vs-classes",children:[{value:"Extending a root",id:"extending-a-root",children:[]},{value:"Extending an inner part",id:"extending-an-inner-part",children:[]},{value:"Extending example",id:"extending-example",children:[]}]}],i={toc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(s.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Use the ",Object(r.b)("inlineCode",{parentName:"p"},"-st-extends")," directive rule to extend a CSS class with another stylesheet. This enables you to style ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/pseudo-classes"},"pseudo-classes")," and ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/pseudo-elements"},"pseudo-elements")," of the extended stylesheet."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note"),Object(r.b)("br",{parentName:"p"}),"\n",Object(r.b)("inlineCode",{parentName:"p"},"-st-extends")," can be applied only to ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/class-selectors"},"class selectors")," and ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/root"},"root"),".")),Object(r.b)("p",null,"In this example, the stylesheet is extending the ",Object(r.b)("inlineCode",{parentName:"p"},"toggle-button.st.css")," stylesheet. The ",Object(r.b)("inlineCode",{parentName:"p"},"checkBtn")," class has a ",Object(r.b)("inlineCode",{parentName:"p"},"label"),", which is a custom pseudo-element, and has a custom pseudo-class, ",Object(r.b)("inlineCode",{parentName:"p"},"toggled"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n:import {\n    -st-from: "./toggle-button.st.css";\n    -st-default: ToggleButton;\n}\n.checkBtn {\n    -st-extends: ToggleButton;\n    background: white;\n}\n.checkBtn::label { color: green; } /* style pseudo element label */\n.checkBtn:toggled::label { color: red; } /* style pseudo element label when check-box is toggled */\n')),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__checkBtn { background: white; }\n.Page__checkBtn .ToggleButton__label { color: green; }\n.Page__checkBtn.ToggleButton--toggled .ToggleButton__label { color: red; }\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"/* page.jsx */\nimport React from 'react';\nimport { style, classes } from './comp.st.css';\n\nimport ToggleButton from './toggle-button';\n\nclass Page {\n    constructor(props) {\n        super(props);\n    }\n\n    render () {\n        return (\n            <div className={style(classes.root, this.props.className) }>\n                <ToggleButton className={classes.checkBtn} />\n            </div>\n        );\n    }\n}\n")),Object(r.b)("h2",{id:"extending-stylesheets-vs-classes"},"Extending stylesheets vs. classes"),Object(r.b)("p",null,"Stylable offers you the ability to import a stylesheet (default import) or class (named import). The two methods differ in their runtime export values."),Object(r.b)("h3",{id:"extending-a-root"},"Extending a root"),Object(r.b)("p",null,"When extending a ",Object(r.b)("inlineCode",{parentName:"p"},"root")," class, Stylable assumes the component itself will place its own ",Object(r.b)("inlineCode",{parentName:"p"},"root")," class, and as such Stylable exports only the local className during runtime. "),Object(r.b)("p",null,"The extended component will receive the extending (external) class name through its props and concat it to the ",Object(r.b)("inlineCode",{parentName:"p"},"root")," node class list."),Object(r.b)("h3",{id:"extending-an-inner-part"},"Extending an inner part"),Object(r.b)("p",null,"Any class other than ",Object(r.b)("inlineCode",{parentName:"p"},"root")," defined in a Stylesheet is considered an inner part. Usually in Stylable extending a class signifies the use of a ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/guides/component-variants"},"variant")," or composed* utility class."),Object(r.b)("p",null,"*"," - Stylable currently does not support composing multiple classes on the same part. We hope to introduce this capability in the near future."),Object(r.b)("h3",{id:"extending-example"},"Extending example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'/* page.st.css */\n@namespace "Page";\n:import {\n    -st-from: "./toggle-button.st.css";\n    -st-default: ToggleButton;\n}\n:import {\n    -st-from: "./toggle-button-variant.st.css";\n    -st-named: toggleVariant;\n}\n\n.defaultCheckBtn {\n    -st-extends: ToggleButton; /* extending stylesheet */\n}\n.variantCheckBtn {\n    -st-extends: toggleVariant; /* extending class */\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__defaultCheckBtn {}\n.Page__variantCheckBtn {}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'/* runtime JS output*/\nimport { classes } from \'./page.st.css\';\n\nconsole.log(classes.defaultCheckBtn) // "Page__defaultCheckBtn"\nconsole.log(classes.variantCheckBtn) // "Page__variantCheckBtn ToggleButton__toggleVariant"\n')))}p.isMDXComponent=!0}}]);