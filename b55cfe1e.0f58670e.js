(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{105:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return c}));var a=n(3),r=n(7),l=(n(0),n(126)),i={id:"extending-through-js",title:"Extend Through JavaScript"},o={unversionedId:"unpublished/extending-through-js",id:"unpublished/extending-through-js",isDocsHomePage:!1,title:"Extend Through JavaScript",description:"Stylable is a CSS pre-processor, but developers can extend their Stylable definitions utlizing CSS, JavaScript or both while maintaining code hinting and type checking for validations.",source:"@site/docs/unpublished/extending-through-js.md",slug:"/unpublished/extending-through-js",permalink:"/stylable.io/docs/unpublished/extending-through-js",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/unpublished/extending-through-js.md",version:"current"},s=[{value:"Plugin types",id:"plugin-types",children:[]},{value:"Stylable types",id:"stylable-types",children:[{value:"Available types and validations",id:"available-types-and-validations",children:[]}]},{value:"Extending through values",id:"extending-through-values",children:[]},{value:"Extending through formatters",id:"extending-through-formatters",children:[]},{value:"Extending through mixins",id:"extending-through-mixins",children:[]},{value:"Declaring types through JS docs",id:"declaring-types-through-js-docs",children:[]}],b={toc:s};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Stylable")," is a CSS pre-processor, but developers can extend their ",Object(l.b)("strong",{parentName:"p"},"Stylable")," definitions utlizing CSS, JavaScript or both while maintaining code hinting and type checking for validations."),Object(l.b)("p",null,"This enables developers greater freedom in generating CSS from code to provide consistency and efficient management of complex CSS-based patterns. "),Object(l.b)("h2",{id:"plugin-types"},"Plugin types"),Object(l.b)("p",null," ",Object(l.b)("strong",{parentName:"p"},"Stylable")," supports the following types of plugins:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Values - string values exported from a javascript module."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/stylable.io/docs/references/formatters"},"Formatters")," - functions for manipulating single CSS declaration values."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"/stylable.io/docs/references/mixins"},"Mixins")," - functions for generating a CSS fragment that can include single or multiple rulesets and declarations. ")),Object(l.b)("p",null,"The types described below are the provided arguments ",Object(l.b)("strong",{parentName:"p"},"Stylable")," provides for the plugins. For example: "),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"function lighten(amount: stNumber, color: stColor) {\n    ...\n}\n")),Object(l.b)("h2",{id:"stylable-types"},"Stylable types"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Stylable")," types represent the available primitive types in CSS. They follow the spirit of the ",Object(l.b)("a",{parentName:"p",href:"https://github.com/w3c/css-houdini-drafts/wiki"},"Houdini")," future spec. "),Object(l.b)("p",null,"Using these types enables the consumers of the plugin to receive code hinting and type checking for validations."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Stylable")," uses TypeScript or JSDocs to infer JS extension signatures."),Object(l.b)("h3",{id:"available-types-and-validations"},"Available types and validations"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Validations"),Object(l.b)("th",{parentName:"tr",align:null},"Validation Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"stColor","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"allowOpacity","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"boolean")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"stSizeUnit","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"allowedUnits","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"string[]")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"min","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"max","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"multiplesOf","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"stPercentage","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"min","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"max","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"multiplesOf","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"stImage","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"allowBase64","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"boolean")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"allowUrl","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"boolean")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"stNumber","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"min","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"max","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"\xa0","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"multiplesOf","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"number")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"stEnum","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"allowedValues","\xa0","\xa0"),Object(l.b)("td",{parentName:"tr",align:null},"string[]")))),Object(l.b)("h2",{id:"extending-through-values"},"Extending through values"),Object(l.b)("p",null,"Values are strings exported via JavaScript modules they can be used inside a Stylable value() function."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-css"},':import {\n    -st-from: "../my-js-values.js";\n    -st-named: myValue;\n}\n\n.myClass {\n    color: value(myValue);\n}\n')),Object(l.b)("p",null,"Uses the following TypeScript code:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"/*my-js-values.ts*/\nexport const myValue = 'red';\n")),Object(l.b)("h2",{id:"extending-through-formatters"},"Extending through formatters"),Object(l.b)("p",null,"Formatters are methods that manipulate parameters to produce a string that is returned as a single declaration value."),Object(l.b)("p",null,"For example the following CSS code:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-css"},'\n:import {\n    -st-from: "../my-formatter.js";\n    -st-named: lighten;\n    -st-default: frmt;\n}\n\n.myClass {\n    color: lighten(30, #ff0000);\n}\n\n')),Object(l.b)("p",null,"Uses the following TypeScript code:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"/*my-formatter.ts*/\n\nimport {darken as polishedDarken, lighten as polishedLighten} from 'polished';\nimport {stNumber, stColor} from \"stylable\";\n\n\n/**\n * Lighten - lightens a color by a percentage.\n*/\nexport function lighten(amount: stNumber, color: stColor): stColor {\n    return polishedLighten(amount, color);\n}\n")),Object(l.b)("h2",{id:"extending-through-mixins"},"Extending through mixins"),Object(l.b)("p",null,"In many cases its useful to generate bigger chunks of css through js.\nHere's an example creating and using an expandOnHover mixin:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-css"},'\n:import{\n    -st-from:"../my-mixins.js";\n    -st-named:expandOnHover;\n}\n\n.myClass{\n    -st-mixin:expandOnHover(200,2);\n}\n\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},'import {stNumber, stColor, stCurves, stCssFragment} from "stylable";\n\n/**\n* Expand\n*/\nexport function expandOnHover( durationMS:stNumber<0,1000> = 200,\n                               increaseBy:stNumber = 1.5,\n                               animationCurve:stCurves = \'easeIn\'):stCssFragment{\n    return {\n        transition:"all "+duration+"ms "+animationCurve;,\n        ":hover":{\n            transform:scale(increaseBy)\n        }\n    }\n}\n\n')),Object(l.b)("h2",{id:"declaring-types-through-js-docs"},"Declaring types through JS docs"),Object(l.b)("p",null,"You can also declare your parameters using JS docs.\nHere is a the same formatter and mixin from above, written in js with JS docs."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'\n/**\n * Lighten - lightens a color by a percentage.\n*/\n/**\n * Lightens a color by an amount.\n * @constructor\n * @param {string} amount - Amount to lighten\n * @param {string} color - Color to be lightened\n*/\nexport function lighten(amount, color) {\n    return polishedLighten(amount, color);\n}\n\n/**\n* Expand\n* @param {stNumber<0,1000>} [durationMS=200] - total animation time MS\n* @param {stPercentage} [increaseBy=1.5] - how much to increase size;\n* @param {stCurves} [animationCurve=cubicEaseIn] - animation change over time curve\n* @returns {stCssFragment}\n*/\nexport function expandOnHover(durationMS,increaseBy,animationCurve){\n    return {\n        transition:"all "+duration+"ms "+animationCurve;,\n        ":hover":{\n            transform:scale(increaseBy)\n        }\n    }\n}\n\n')))}c.isMDXComponent=!0},126:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),c=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,d=u["".concat(i,".").concat(m)]||u[m]||p[m]||l;return n?r.a.createElement(d,o(o({ref:t},b),{},{components:n})):r.a.createElement(d,o({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var b=2;b<l;b++)i[b]=n[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);