(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{121:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),s=n(7),o=(n(0),n(133)),r={id:"pseudo-classes",title:"Pseudo-Classes"},l={unversionedId:"references/pseudo-classes",id:"references/pseudo-classes",isDocsHomePage:!1,title:"Pseudo-Classes",description:"In addition to CSS's native pseudo-classes, likenth-child(), Stylable enables you to define custom pseudo-classes so that you can apply styles to your components based on state.",source:"@site/docs/references/pseudo-classes.md",slug:"/references/pseudo-classes",permalink:"/docs/references/pseudo-classes",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/pseudo-classes.md",version:"current",sidebar:"Specification Reference",previous:{title:"Extend Stylable Stylesheet",permalink:"/docs/references/extend-stylesheet"},next:{title:"Parameter Types to Use with Pseudo-Classes",permalink:"/docs/references/state-parameter-types"}},c=[{value:"Define custom pseudo-classes",id:"define-custom-pseudo-classes",children:[]},{value:"Simple custom pseudo-classes",id:"simple-custom-pseudo-classes",children:[]},{value:"Custom pseudo-classes with parameters",id:"custom-pseudo-classes-with-parameters",children:[]},{value:"Mapped states",id:"mapped-states",children:[]},{value:"State inheritance",id:"state-inheritance",children:[]},{value:"Enable custom pseudo-classes",id:"enable-custom-pseudo-classes",children:[]}],i={toc:c};function p(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In addition to CSS's native ",Object(o.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en/docs/Web/CSS/Pseudo-classes"},"pseudo-classes"),", like ",Object(o.b)("inlineCode",{parentName:"p"},":hover")," and ",Object(o.b)("inlineCode",{parentName:"p"},":nth-child()"),", ",Object(o.b)("strong",{parentName:"p"},"Stylable")," enables you to define custom pseudo-classes so that you can apply styles to your components based on state."),Object(o.b)("p",null,"Let's say you want a component to have different styling applied to it when its content is loading. You can define ",Object(o.b)("inlineCode",{parentName:"p"},"loading")," as a custom pseudo-class and toggle it in your component."),Object(o.b)("h2",{id:"define-custom-pseudo-classes"},"Define custom pseudo-classes"),Object(o.b)("p",null,"To define custom pseudo-classes, you use the ",Object(o.b)("strong",{parentName:"p"},"Stylable")," directive rule ",Object(o.b)("inlineCode",{parentName:"p"},"-st-states")," to provide a list of the possible custom pseudo-classes that you want to use in the CSS."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"-st-states")," directive rule can be defined only for simple selectors like ",Object(o.b)("a",{parentName:"p",href:"/docs/references/class-selectors"},"class selector")," and ",Object(o.b)("a",{parentName:"p",href:"/docs/references/root"},"root"),"."),Object(o.b)("h2",{id:"simple-custom-pseudo-classes"},"Simple custom pseudo-classes"),Object(o.b)("p",null,"To define custom pseudo-classes, or states, without parameters, you tell ",Object(o.b)("strong",{parentName:"p"},"Stylable")," the list of possible custom states that the CSS declaration may be given. You can then target the states in the context of the selector. In this example ",Object(o.b)("inlineCode",{parentName:"p"},"toggled")," and ",Object(o.b)("inlineCode",{parentName:"p"},"loading")," are added to the ",Object(o.b)("inlineCode",{parentName:"p"},"root")," selector and then targeted with different colors. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'/* example1.st.css */\n@namespace "Example1";\n.root {\n    -st-states: toggled, loading;\n}\n.root:toggled { color: red; }\n.root:loading { color: green; }\n.root:loading:toggled { color: blue; }\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Example1__root.Example1--toggled { color: red; }\n.Example1__root.Example1--loading { color: green; }\n.Example1__root.Example1--loading.Example1--toggled { color: blue; }\n")),Object(o.b)("h2",{id:"custom-pseudo-classes-with-parameters"},"Custom pseudo-classes with parameters"),Object(o.b)("p",null,"To simplify the CSS selector interface, you can also define custom pseudo-classes that accept a parameter. "),Object(o.b)("p",null,"For example, a cell in a grid can be marked and later targeted using ",Object(o.b)("inlineCode",{parentName:"p"},"column")," and ",Object(o.b)("inlineCode",{parentName:"p"},"row")," pseudo-classes."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},".cell {\n    -st-states: column(number), \n                row(number);\n}\n\n.cell:column(1):row(4) {\n    color:red;\n}\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Stylable")," offers a built-in system of ",Object(o.b)("a",{parentName:"p",href:"/docs/references/state-parameter-types"},"state types")," that provide a better development experience when targeting pseudo-classes. "),Object(o.b)("h2",{id:"mapped-states"},"Mapped states"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Stylable")," generates custom pseudo-classes using ",Object(o.b)("inlineCode",{parentName:"p"},"className")," attributes. When you are building your components with ",Object(o.b)("strong",{parentName:"p"},"Stylable")," the standard DOM implementation is handy, but you might want to target the state in a custom way. "),Object(o.b)("p",null,"You can use this feature to define custom pseudo-classes even if the existing components you are targeting are not based on ",Object(o.b)("strong",{parentName:"p"},"Stylable"),". "),Object(o.b)("p",null,"In this example, ",Object(o.b)("inlineCode",{parentName:"p"},"toggled")," and ",Object(o.b)("inlineCode",{parentName:"p"},"loading")," are defined on the root class with their custom implementation. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'/* example-custom.st.css */\n@namespace "ExampleCustom";\n.root {\n    -st-states: toggled(".on"), loading("[dataSpinner]");\n}\n.root:toggled { color: red; }\n.root:loading { color: green; }\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.ExampleCustom__root.on { color: red; }\n.ExampleCustom__root[dataSpinner] { color: green; }\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"When writing custom mapping, ensure your custom selector targets a simple selector, and not a CSS complex selector."))),Object(o.b)("h2",{id:"state-inheritance"},"State inheritance"),Object(o.b)("p",null,"You can extend another imported stylesheet and inherit its custom pseudo-classes. In this example the value ",Object(o.b)("inlineCode",{parentName:"p"},"Comp1")," is imported from the ",Object(o.b)("inlineCode",{parentName:"p"},"example1.css")," stylesheet and extended by ",Object(o.b)("inlineCode",{parentName:"p"},".mediaButton"),". The custom pseudo-classes ",Object(o.b)("inlineCode",{parentName:"p"},"toggled")," and ",Object(o.b)("inlineCode",{parentName:"p"},"selected")," are defined to be used on the ",Object(o.b)("inlineCode",{parentName:"p"},"mediaButton")," component. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'/* example2.st.css */\n@namespace "Example2";\n:import {\n    -st-from: "./example1.st.css";\n    -st-default: Comp1;\n}\n.mediaButton {\n    -st-extends: Comp1;\n    -st-states: toggled, selected;\n}\n.mediaButton:hover { border: 0.2em solid black; } /* native CSS because no custom declaration*/\n.mediaButton:loading { color: silver; } /* from Example1 */\n.mediaButton:selected { color: salmon; } /* from Example2 */\n.mediaButton:toggled { color: gold; } /* included in Example1 but overridden by Example2 */\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Example1__root.Example1--toggled { color: red; }\n.Example1__root.Example1--loading { color: green; }\n.Example2__mediaButton:hover { border: 0.2em solid black; } /* native hover - not declared */\n.Example2__mediaButton.Example1--loading { color: silver; } /* loading scoped to Example1 - only one to declare */\n.Example2__mediaButton.Example2--selected { color: salmon; } /* selected scoped to Example2 - only one to declare */\n.Example2__mediaButton.Example2--toggled { color: gold;} /* toggled scoped to Example2 - last to declare */\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"You can override the behavior of native pseudo-classes. This can enable you to write ",Object(o.b)("a",{parentName:"p",href:"https://remysharp.com/2010/10/08/what-is-a-polyfill"},"polyfills")," for forthcoming CSS pseudo-classes to ensure that when you define a name for a custom pseudo-class, if there are clashes with a new CSS pseudo-class in the future, your app's behavior does not change. We don't recommend you to override an existing CSS pseudo-class unless you want to drive your teammates insane."))),Object(o.b)("h2",{id:"enable-custom-pseudo-classes"},"Enable custom pseudo-classes"),Object(o.b)("p",null,"Custom pseudo-classes are implemented using ",Object(o.b)("inlineCode",{parentName:"p"},"className")," attributes and need additional runtime logic to control when they are on and off. "),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Stylable")," offers ",Object(o.b)("a",{parentName:"p",href:"/docs/getting-started/react-integration"},"React CSS state integration")," to help components manage custom pseudo-classes easily."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"/* sample of a stylable component */\nimport { style, classes } from './stylesheet.st.css';\n\nclass MyComponent {\n    render() {\n        return <div className={style(classes.root, { \n                toggled: true,\n                selected: false\n            }, this.props.className) }>\n        </div>\n    }\n}\n")))}p.isMDXComponent=!0},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var a=n(0),s=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=s.a.createContext({}),p=function(e){var t=s.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return s.a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},u=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,b=d["".concat(r,".").concat(u)]||d[u]||m[u]||o;return n?s.a.createElement(b,l(l({ref:t},i),{},{components:n})):s.a.createElement(b,l({ref:t},i))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var i=2;i<o;i++)r[i]=n[i];return s.a.createElement.apply(null,r)}return s.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);