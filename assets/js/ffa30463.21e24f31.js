(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),s=n(7),r=(n(0),n(121)),i={id:"state-parameter-types",sidebar_label:"Pseudo-Classes Parameters",title:"Parameter Types to Use with Pseudo-Classes",layout:"docs"},o={unversionedId:"references/state-parameter-types",id:"references/state-parameter-types",isDocsHomePage:!1,title:"Parameter Types to Use with Pseudo-Classes",description:"Custom pseudo-classes can either be simple or accept parameters.",source:"@site/docs/references/state-parameter-types.md",slug:"/references/state-parameter-types",permalink:"/docs/references/state-parameter-types",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/state-parameter-types.md",version:"current",sidebar_label:"Pseudo-Classes Parameters",sidebar:"Specification Reference",previous:{title:"Pseudo-Classes",permalink:"/docs/references/pseudo-classes"},next:{title:"Pseudo-Elements",permalink:"/docs/references/pseudo-elements"}},l=[{value:"Tag",id:"tag",children:[]},{value:"Enum",id:"enum",children:[]},{value:"String",id:"string",children:[{value:"String validation optional",id:"string-validation-optional",children:[]}]},{value:"Number",id:"number",children:[{value:"Number validation optional",id:"number-validation-optional",children:[]}]},{value:"Future intent",id:"future-intent",children:[]}],c={toc:l};function u(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Custom ",Object(r.b)("a",{parentName:"p",href:"/docs/references/pseudo-classes"},"pseudo-classes")," can either be simple or accept parameters. "),Object(r.b)("p",null,"A custom pseudo-class with no parameters is considered a ",Object(r.b)("a",{parentName:"p",href:"/docs/references/pseudo-classes#simple-custom-states"},"simple custom state"),"."),Object(r.b)("p",null,"When defining a custom pseudo-class with a parameter:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"You must provide a type definition."),Object(r.b)("li",{parentName:"ul"},"Optionally you can provide validation arguments to the type defined"),Object(r.b)("li",{parentName:"ul"},"Optionally you can provide each state definition with a ",Object(r.b)("inlineCode",{parentName:"li"},"default value"),", enabling it to be used without providing a parameter argument.")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    -st-states: stateX([type]) [default Value?],\n                stateY([type]) [default Value?];\n}\n\n.root:stateX(arg) {}\n\n.root:stateX {\n    /* parameter resolves to "default Value", \n    if no default value was provided,\n    this will fail validation */\n}\n')),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"When defining a ",Object(r.b)("inlineCode",{parentName:"p"},"default value"),", you can use ",Object(r.b)("a",{parentName:"p",href:"/docs/references/st-variables"},"variables")," and ",Object(r.b)("a",{parentName:"p",href:"/docs/references/formatters"},"formatters"),"."))),Object(r.b)("h2",{id:"tag"},"Tag"),Object(r.b)("p",null,"You can define a custom state with a ",Object(r.b)("strong",{parentName:"p"},"tags value")," (seperated by whitespace), and then target it using a pseudo-class selector with a matching ",Object(r.b)("strong",{parentName:"p"},"tag argument"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    /* define a custom state called "cart" */\n    -st-states: cart( tag )\n}\n\n.root:cart(shirt) {\n    /* targets an element that has a state with a value that\n    is a whitespace-separated list of tags, \n    one of which is exactly the tag argument "shirt" */\n}\n')),Object(r.b)("p",null,"Setting the state ",Object(r.b)("strong",{parentName:"p"},"tag values")," in the view ",Object(r.b)("inlineCode",{parentName:"p"},'<span className={style(classes.root, {cart: "shirt"})}>')," resolves to ",Object(r.b)("inlineCode",{parentName:"p"},'<span className="style__root style---cart-5-shirt" />'),"."),Object(r.b)("h2",{id:"enum"},"Enum"),Object(r.b)("p",null,"You can define a custom state with possible ",Object(r.b)("strong",{parentName:"p"},"enum value")," options, and then target one of the options using a pseudo-class selector with a matching ",Object(r.b)("strong",{parentName:"p"},"string argument"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    /* define the custom state "size" */\n    -st-states: size( enum(small, medium, large) )\n}\n\n.root:size(medium) {\n    /* target an element with a state value of "medium" */\n}\n\n.root:size(huge) {\n   /* invalid because "huge" is not a one of the possible \n   values defined for the state "size" */\n}\n')),Object(r.b)("p",null,"Setting the state's ",Object(r.b)("strong",{parentName:"p"},"enum value")," in the view ",Object(r.b)("inlineCode",{parentName:"p"},'<span className={style(classes.root, {size: "medium"})}>')," resolves to ",Object(r.b)("inlineCode",{parentName:"p"},'<span className="style--size-medium" />'),"."),Object(r.b)("h2",{id:"string"},"String"),Object(r.b)("p",null,"You can define a custom state with a ",Object(r.b)("strong",{parentName:"p"},"string value"),", and then target it using a pseudo-class selector with a matching ",Object(r.b)("strong",{parentName:"p"},"string argument"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    /* define the "selected" custom state with a string parameter type */\n    -st-states: selected( string );\n}\n\n.root:selected(username) {\n    /* target an element with a state value that \n    is exactly the string argument "username" */\n}\n')),Object(r.b)("p",null,"Setting the state ",Object(r.b)("strong",{parentName:"p"},"string value")," in the view ",Object(r.b)("inlineCode",{parentName:"p"},'<span className={style(classes.root, {selected: "username"})}>')," resolves to ",Object(r.b)("inlineCode",{parentName:"p"},'<span className="style--selected-username" />'),"."),Object(r.b)("h3",{id:"string-validation-optional"},"String validation ","[optional]"),Object(r.b)("p",null,"You can optionally pass a regular expression string as an argument to add validation for the pseudo-class selector ",Object(r.b)("strong",{parentName:"p"},"string argument"),". The regular expression must be within quotes."),Object(r.b)("p",null,"You can optionally pass a regular expression function (",Object(r.b)("inlineCode",{parentName:"p"},"regex()"),") to the string type to add regular expression validation for the pseudo-class selector.\nThis function accepts a single expression to be tested against the selector parameter. The expression must be within quotes."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    /* validates that the targeting string argument begins with "user" */\n    -st-states: selected( string(regex("^user")) );\n}\n\n/* a valid argument */\n.root:selected(username) {}\n\n/* invalid because it doesn\'t match the regular expression "^user" */\n.root:selected(index) {}\n')),Object(r.b)("p",null,"String type can also accept several other validations, including ",Object(r.b)("inlineCode",{parentName:"p"},"minLength(number)"),", ",Object(r.b)("inlineCode",{parentName:"p"},"maxLength(number)")," and ",Object(r.b)("inlineCode",{parentName:"p"},"contains(string)"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},".root {\n    /* validates the targeting string arguments with multiple validations */\n    -st-states: selected( \n                    string( \n                        minLength(2), \n                        maxLength(10), \n                        contains(user) \n                    ) \n                );\n}\n\n/* valid argument */\n.root:selected(username) {}\n\n/* invalid due to minLength(2) & contains(user) */\n.root:selected(x) {}\n")),Object(r.b)("h2",{id:"number"},"Number"),Object(r.b)("p",null,"You can define a custom state with a ",Object(r.b)("strong",{parentName:"p"},"number value"),", and then target it using a pseudo-class selector with a matching ",Object(r.b)("strong",{parentName:"p"},"number argument"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-html"},'<span data-column="5" />\n')),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    /* define the custom pseudo-class "column" */\n    -st-states: column( number )\n}\n\n.root:column(5) {\n    /* target an element with a state value that is exactly the number argument "5" */\n}\n')),Object(r.b)("p",null,"Setting the state ",Object(r.b)("strong",{parentName:"p"},"number value")," in the view ",Object(r.b)("inlineCode",{parentName:"p"},"<span className={style(classes.root, {column: 5})}>")," resolves to ",Object(r.b)("inlineCode",{parentName:"p"},'<span className="style--column-5" />'),"."),Object(r.b)("h3",{id:"number-validation-optional"},"Number validation ","[optional]"),Object(r.b)("p",null,"You can use several validators that the number type provides."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'.root {\n    /* validates the targeting number argument */\n    -st-states: column( number( min(2), max(6), multipleOf(2) ) )\n}\n\n/* valid arguments */\n.root:column(2),\n.root:column(4),\n.root:column(6) {}\n\n/* invalid because not a "multipleOf(2)" */\n.root:column(3),\n.root:column(5) {}\n\n/* invalid because of "min(2)" and "max(6)" validations */\n.root:column(1),\n.root:column(7) {}\n')),Object(r.b)("h2",{id:"future-intent"},"Future intent"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/wix/stylable/issues/268"},"Custom user types and validations")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/wix/stylable/issues/270"},'Custom pseudo-class type "nth"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/wix/stylable/issues/269"},"Multiple named parameters")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/wix/stylable/issues/271"},"Custom pseudo-class string prefixes")),Object(r.b)("li",{parentName:"ul"},"Lang type - use attribute selector ",Object(r.b)("inlineCode",{parentName:"li"},'[state|="en"]')," to support language code")))}u.isMDXComponent=!0},121:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),s=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=s.a.createContext({}),u=function(e){var t=s.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return s.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},b=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),b=a,d=p["".concat(i,".").concat(b)]||p[b]||m[b]||r;return n?s.a.createElement(d,o(o({ref:t},c),{},{components:n})):s.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return s.a.createElement.apply(null,i)}return s.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);