(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{133:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),p=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,u=m["".concat(c,".").concat(d)]||m[d]||b[d]||o;return n?a.a.createElement(u,s(s({ref:t},i),{},{components:n})):a.a.createElement(u,s({ref:t},i))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var i=2;i<o;i++)c[i]=n[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(133)),c={id:"tag-selectors",title:"CSS Tag/Component Selector",sidebar_label:"Tag/Component Selector"},s={unversionedId:"references/tag-selectors",id:"references/tag-selectors",isDocsHomePage:!1,title:"CSS Tag/Component Selector",description:"Like CSS type selectors, Stylable tag selectors can match the names of elements in the DOM.",source:"@site/docs/references/tag-selectors.md",slug:"/references/tag-selectors",permalink:"/docs/references/tag-selectors",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/tag-selectors.md",version:"current",sidebar_label:"Tag/Component Selector",sidebar:"Specification Reference",previous:{title:"CSS Class Selectors",permalink:"/docs/references/class-selectors"},next:{title:"Extend Stylable Stylesheet",permalink:"/docs/references/extend-stylesheet"}},l=[{value:"Native element",id:"native-element",children:[]},{value:"Component element",id:"component-element",children:[]}],i={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Like CSS ",Object(o.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors"},"type selectors"),", ",Object(o.b)("strong",{parentName:"p"},"Stylable")," ",Object(o.b)("inlineCode",{parentName:"p"},"tag selectors")," can match the names of elements in the DOM."),Object(o.b)("p",null,"Tag selectors are ",Object(o.b)("strong",{parentName:"p"},"not")," scoped themselves. Other selectors used with a tag selector can be scoped. For example if a ",Object(o.b)("a",{parentName:"p",href:"/docs/references/class-selectors"},"class selector")," is used with a tag selector, the class is scoped and the tag selector is not. The matching qualified name of a tag selector can therefore target any element in the subtree of the component. "),Object(o.b)("h2",{id:"native-element"},"Native element"),Object(o.b)("p",null,"Targeting a native element matches any element with the same tag name that is found in a prefix selector. The prefix selector could be a class selector or the root."),Object(o.b)("p",null,"To target ",Object(o.b)("strong",{parentName:"p"},"all")," elements of a certain type in your project, use a ",Object(o.b)("a",{parentName:"p",href:"/docs/references/global-selectors"},Object(o.b)("inlineCode",{parentName:"a"},"global selector")),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'@namespace "Page";\n.root form { background: green; }\n.sideBar:hover form { background: red; }\n:global(span) { background: blue; }\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output - form is scoped to the page - affects any nested instance */\n.Page__root form { background: green; } \n.Page__sideBar:hover form { background: red; }\nspan { background: blue; } /* this will affect *ALL* spans in your application */\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The value ",Object(o.b)("inlineCode",{parentName:"p"},"form")," itself is not namespaced."))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"/* comp.jsx */\nimport React from 'react';\nimport { style, classes } from './comp.st.css';\n\nclass Comp extends React.Component {\n    render () {\n        return (\n            <div className={style(classes.root, this.props.className)}>\n                <div className={classes.sideBar}>\n                    <form /> /* green background and red while hovering parent */\n                </div>\n                <form /> /* green background */\n                <span /> /* blue background */\n            </div>\n        );\n    }\n}\n")),Object(o.b)("h2",{id:"component-element"},"Component element"),Object(o.b)("p",null,"When the value of a stylesheet is ",Object(o.b)("a",{parentName:"p",href:"/docs/references/imports"},"imported")," with a ",Object(o.b)("strong",{parentName:"p"},"capital first letter"),", it can be used as a component tag selector."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'@namespace "Page";\n:import{\n    -st-from: "./toggle-button.st.css";\n    -st-default: ToggleButton;\n}\n.root ToggleButton { background: green; }\n.sideBar:hover ToggleButton { background: red; }\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output - ToggleButton is scoped to the page, affects any nested toggle button */\n.Page__root .ToggleButton__root { background: green; }\n.Page__sideBar:hover .ToggleButton__root { background: red; }\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"/* comp.jsx */\nimport React from 'react';\nimport { style, classes } from './comp.st.css';\n\n/* React implementation - button component implements toggle-button.css */\nimport ToggleButton from './toggle-button';\n\nclass Comp extends React.Component {\n    render () {\n        return (\n            <div className={style(classes.root, this.props.className)}>\n                <div className={classes.sideBar}>\n                    <ToggleButton /> /* green background and red while hovering parent */\n                </div>\n                <ToggleButton /> /* green background */\n            </div>\n        );\n    }\n}\n")))}p.isMDXComponent=!0}}]);