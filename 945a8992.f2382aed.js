(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{102:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),o=(a(0),a(126)),s={id:"st-variables",title:"Stylable Variables"},i={unversionedId:"references/st-variables",id:"references/st-variables",isDocsHomePage:!1,title:"Stylable Variables",description:"Use variables to define common values to be used across the stylesheet and so they can be exposed for sharing and theming.",source:"@site/docs/references/variables.md",slug:"/references/st-variables",permalink:"/stylable.io/docs/references/st-variables",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/variables.md",version:"current",sidebar:"someSidebar",previous:{title:"Formatters",permalink:"/stylable.io/docs/references/formatters"},next:{title:"CSS Custom Properties (CSS vars)",permalink:"/stylable.io/docs/references/css-vars"}},l=[{value:"Use in stylesheet",id:"use-in-stylesheet",children:[]},{value:"Import variables",id:"import-variables",children:[]},{value:"Compose variables",id:"compose-variables",children:[]},{value:"Advanced variable types",id:"advanced-variable-types",children:[{value:"Stylable native variable types",id:"stylable-native-variable-types",children:[]},{value:"Custom variable type",id:"custom-variable-type",children:[]}]}],c={toc:l};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Use variables to define common values to be used across the stylesheet and so they can be exposed for sharing and theming.\nThese variables are used only during build-time and have no impact on the resulting runtime code."),Object(o.b)("p",null,"If you wish to use dynamic variables, and to change their values during runtime, see ",Object(o.b)("a",{parentName:"p",href:"/stylable.io/docs/references/css-vars"},"css custom properties (vars)")," for further details."),Object(o.b)("div",{className:"admonition admonition-important alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Variables are scoped to the specific stylesheet and do not conflict with variables from another stylesheet."))),Object(o.b)("h2",{id:"use-in-stylesheet"},"Use in stylesheet"),Object(o.b)("p",null,"Use the syntax ",Object(o.b)("inlineCode",{parentName:"p"},":vars")," to define variables, and apply them with a ",Object(o.b)("inlineCode",{parentName:"p"},"value()"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'@namespace "Example1";\n:vars {\n    color1: red;\n    color2: green;\n}\n.root {\n    color: value(color1);\n    background: value(color2);\n}\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Example1__root {\n    color: red; /* color1 */\n    background: green; /* color2 */\n}\n")),Object(o.b)("h2",{id:"import-variables"},"Import variables"),Object(o.b)("p",null,"Any var defined in a stylesheet is exported as a named export and can be ",Object(o.b)("a",{parentName:"p",href:"/stylable.io/docs/references/imports"},"imported")," by other stylesheets."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'@namespace "Example2";\n:import {\n    -st-from: "./example1.css"; /* Example1 stylesheet */\n    -st-named: color1, color2; /* import color1 and color2 variables */\n}\n.root {\n    border: 10px solid value(color1);\n}\n.root:hover {\n    border: 10px solid value(color2);\n}\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Example2__root {\n    border: 10px solid red; /* color1 */\n}\n.Example2__root:hover {\n    border: 10px solid green; /* color2 */\n}\n")),Object(o.b)("div",{className:"admonition admonition-important alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Imported variables are not exported from the stylesheet that has imported them. They can be imported only from the stylesheet in which they are declared."))),Object(o.b)("h2",{id:"compose-variables"},"Compose variables"),Object(o.b)("p",null,"You can set the value of a variable using another variable."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},'@namespace "Example3";\n:import {\n    -st-from: "./example1.css"; /* Example1 stylesheet */\n    -st-named: color1, color2;\n}\n:vars {\n    border1: 10px solid value(color1); /* use color1 in a complex value */\n}\n.root {\n    border: value(border1); /* user border1 */\n}\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Example3__root {\n    border: 10px solid red; /* 10px solid {color1} */\n}\n")),Object(o.b)("h2",{id:"advanced-variable-types"},"Advanced variable types"),Object(o.b)("p",null,"You can use Stylable custom types when defining a variable to group multiple values under a shared context. This gives you a better way to define and manage variables in your stylesheet. "),Object(o.b)("p",null,"Stylable does this by utilizing a type function in the variable definition and passing additional arguments to the ",Object(o.b)("inlineCode",{parentName:"p"},"value()")," function."),Object(o.b)("h3",{id:"stylable-native-variable-types"},"Stylable native variable types"),Object(o.b)("p",null,"By default, Stylable exposes two types of variables that are available globally and do not require a special import:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"stMap"),"  "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"stArray"))),Object(o.b)("h4",{id:"stmap"},"stMap"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"stMap")," function to provide an interface similar to a map. You can group variables by context and retrieve them by key."),Object(o.b)("p",null,"Its definition is comprised of key/value pairs with a space as a delimiter between them, and a comma as a separator between pairs."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},":vars {\n    colors: stMap(\n        bg green,\n        text red\n    );\n}\n\n.root {\n    background-color: value(colors, bg); /* green */\n}\n")),Object(o.b)("h4",{id:"starray"},"stArray"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"stArray")," function to provide an interface which is similar to an array. This enables you to group variables by context and retrieve them by their index. "),Object(o.b)("p",null,"Its definition is comprised of values that are zero-based and comma separated."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},":vars {\n    colors: stArray(red, green);\n}\n\n.root {\n    background-color: value(colors, 1); /* green */\n}\n")),Object(o.b)("h3",{id:"custom-variable-type"},"Custom variable type"),Object(o.b)("p",null,"Stylable also offers a custom variable type, ",Object(o.b)("inlineCode",{parentName:"p"},"stBorder"),", that must be imported from the ",Object(o.b)("inlineCode",{parentName:"p"},"@stylable/custom-value")," ",Object(o.b)("a",{parentName:"p",href:"https://github.com/wix/stylable/tree/master/packages/custom-value"},"package"),"."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"stBorder")," accepts three arguments, ",Object(o.b)("inlineCode",{parentName:"p"},"size"),", ",Object(o.b)("inlineCode",{parentName:"p"},"style")," and ",Object(o.b)("inlineCode",{parentName:"p"},"color")," in that order. When using the type, you can either invoke the entire border definition (by not passing an additional argument), or specific parts of it, according to their key."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-css"},':import {\n    -st-from: "@stylable/custom-value";\n    -st-named: stBorder;\n}\n\n:vars {\n    /* order of arguments: size style color */\n    myBorder: stBorder(1px, solid, green);\n}\n\n.root {\n    border: value(myBorder); /* 1px solid green */\n    background-color: value(myBorder, color); /* green */\n}\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},Object(o.b)("inlineCode",{parentName:"p"},"stBorder")," is just the first of future custom variable types that will be available in Stylable."))))}b.isMDXComponent=!0},126:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=b(a),m=n,u=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?r.a.createElement(u,i(i({ref:t},c),{},{components:a})):r.a.createElement(u,i({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);