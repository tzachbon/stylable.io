(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{126:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),p=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,d=b["".concat(s,".").concat(m)]||b[m]||u[m]||o;return n?a.a.createElement(d,c(c({ref:t},i),{},{components:n})):a.a.createElement(d,c({ref:t},i))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var i=2;i<o;i++)s[i]=n[i];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(126)),s={id:"react-integration",title:"React Integration",layout:"docs"},c={unversionedId:"getting-started/react-integration",id:"getting-started/react-integration",isDocsHomePage:!1,title:"React Integration",description:"You can manually integrate Stylable with a React component as described below. You can also build your own helpers.",source:"@site/docs/getting-started/react-integration.md",slug:"/getting-started/react-integration",permalink:"/stylable.io/docs/getting-started/react-integration",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/getting-started/react-integration.md",version:"current",sidebar:"someSidebar",previous:{title:"Installation",permalink:"/stylable.io/docs/getting-started/install-configure"},next:{title:"Stylable Intelligence",permalink:"/stylable.io/docs/getting-started/stylable-intelligence"}},l=[],i={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You can manually integrate ",Object(o.b)("strong",{parentName:"p"},"Stylable")," with a React component as described below. You can also build your own helpers."),Object(o.b)("p",null,"Before you begin, read the ",Object(o.b)("a",{parentName:"p",href:"/stylable.io/docs/guides/runtime"},"Runtime guide")," to understand the ",Object(o.b)("strong",{parentName:"p"},"Stylable")," runtime API."),Object(o.b)("p",null,"To manualy integrate ",Object(o.b)("strong",{parentName:"p"},"Stylable")," to a React component, you ",Object(o.b)("strong",{parentName:"p"},"must")," first mark the root element of the component:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'import { style, classes } from "style.st.css";\n\nclass Comp extends React.Component {\n    render() {\n        return (\n            <div className={style(\n                classes.root, \n                { stateA: true, stateB: false },\n                this.props.className\n            )}></div>\n        );\n    }\n}\n')),Object(o.b)("p",null,"The result of the above generates and adds the props needed to define the root element for styling:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Marks component root by setting the root target ",Object(o.b)("inlineCode",{parentName:"li"},"className")),Object(o.b)("li",{parentName:"ul"},"Sets component states using generated class names "),Object(o.b)("li",{parentName:"ul"},"Appends ",Object(o.b)("inlineCode",{parentName:"li"},"className")," override from component props to the root ",Object(o.b)("inlineCode",{parentName:"li"},"className")),Object(o.b)("li",{parentName:"ul"},"Custom or overridden component states are added via additional class names")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Note"),Object(o.b)("br",{parentName:"p"}),"\n","To enable external styling, we recommend passing the ",Object(o.b)("inlineCode",{parentName:"p"},"className")," prop. To make the component more stylable, we also recommend also merging the ",Object(o.b)("inlineCode",{parentName:"p"},"style")," prop.")),Object(o.b)("p",null,"All nodes, other than ",Object(o.b)("inlineCode",{parentName:"p"},"root"),", can be marked directly with the class mapping and the ",Object(o.b)("a",{parentName:"p",href:"../guides/runtime#custom-state-mapping"},"$cssStates")," function:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'import { style, classes, cssStates } from "style.st.css";\n\nclass Comp extends React.Component {\n    render() {\n        return (\n            <div className={style(classes.root, {}, this.props.className) }>\n                <span className={classes.label} >\n                    Text\n                </span>\n                <span className={cssStates({ stateA: true })} >\n                    More Text\n                </span>\n            </div>\n        );\n    }\n}\n')))}p.isMDXComponent=!0}}]);