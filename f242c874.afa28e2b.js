(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{118:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return i}));var a=n(3),o=n(7),r=(n(0),n(126)),s={id:"pseudo-elements",title:"Pseudo-Elements"},l={unversionedId:"references/pseudo-elements",id:"references/pseudo-elements",isDocsHomePage:!1,title:"Pseudo-Elements",description:"In addition to CSS's native pseudo-elements, Stylable stylesheets automatically expose CSS classes as custom pseudo-elements. This enables you to access internal parts of a component to apply styling.",source:"@site/docs/references/pseudo-elements.md",slug:"/references/pseudo-elements",permalink:"/stylable.io/docs/references/pseudo-elements",editUrl:"https://github.com/wixplosives/stylable.io/edit/master/docs/docs/references/pseudo-elements.md",version:"current",sidebar:"someSidebar",previous:{title:"Pseudo-Classes",permalink:"/stylable.io/docs/references/pseudo-classes"},next:{title:"Global Selectors",permalink:"/stylable.io/docs/references/global-selectors"}},c=[{value:"Define a custom pseudo-element",id:"define-a-custom-pseudo-element",children:[]},{value:"Style custom pseudo-elements",id:"style-custom-pseudo-elements",children:[]},{value:"Extend stylesheet pseudo-elements",id:"extend-stylesheet-pseudo-elements",children:[]},{value:"Override custom pseudo-elements",id:"override-custom-pseudo-elements",children:[]}],p={toc:c};function i(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In addition to CSS's native ",Object(r.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en/docs/Web/CSS/Pseudo-elements"},"pseudo-elements"),", ",Object(r.b)("strong",{parentName:"p"},"Stylable")," stylesheets automatically expose CSS classes as custom pseudo-elements. This enables you to access internal parts of a component to apply styling."),Object(r.b)("h2",{id:"define-a-custom-pseudo-element"},"Define a custom pseudo-element"),Object(r.b)("p",null,"Any ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/class-selectors"},"CSS class")," is accessible as a pseudo-element of an ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/extend-stylesheet"},"extending stylesheet"),"."),Object(r.b)("p",null,"When you define a CSS class inside a component, in this case a ",Object(r.b)("inlineCode",{parentName:"p"},"playButton")," in a ",Object(r.b)("inlineCode",{parentName:"p"},"VideoPlayer"),", that class may be targeted as a pseudo-element of any class that extends the component ",Object(r.b)("inlineCode",{parentName:"p"},"videoPlayer"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},'/* video-player.st.css */\n@namespace "VideoPlayer";\n.root {}\n.playButton { \n    background: black; \n    color: white;\n}\n')),Object(r.b)("h2",{id:"style-custom-pseudo-elements"},"Style custom pseudo-elements"),Object(r.b)("p",null,"Use ",Object(r.b)("inlineCode",{parentName:"p"},"::")," to access an internal part of a component after a ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/tag-selectors#component-element"},"custom tag selector")," or after an ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/extend-stylesheet"},"extended class selector"),"."),Object(r.b)("p",null,"In this example, you ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/imports"},"import")," a ",Object(r.b)("inlineCode",{parentName:"p"},"VideoPlayer")," component into your stylesheet, and style an internal part called ",Object(r.b)("inlineCode",{parentName:"p"},"playButton")," overriding its original styling."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"@namespace \"Page\";\n:import {\n    -st-from: './video-player.st.css';\n    -st-default: VideoPlayer;\n}\n.mainVideo {\n    -st-extends: VideoPlayer; /* define mainVideo as VideoPlayer */\n}\n.mainVideo::playButton { /* override mainVideo playButton */\n    background: green;\n    color: purple;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__mainVideo.VideoPlayer__root {}\n.Page__mainVideo.VideoPlayer__root .VideoPlayer__playButton {\n    background: green;\n    color: purple;\n}\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note"),Object(r.b)("br",{parentName:"p"}),"\n","Custom pseudo-elements are not limited to the end of a selector like native pseudo-elements, and they can be chained. For example, you can access the label of a navigation button from a gallery: ",Object(r.b)("inlineCode",{parentName:"p"},".myGallery::navBtn::label"),".")),Object(r.b)("h2",{id:"extend-stylesheet-pseudo-elements"},"Extend stylesheet pseudo-elements"),Object(r.b)("p",null,"When a Stylable stylesheet ",Object(r.b)("a",{parentName:"p",href:"/stylable.io/docs/references/root"},"root")," extends another stylesheet, pseudo-elements are automatically exposed on the extending stylesheet and available inline."),Object(r.b)("p",null,"In this example, the class ",Object(r.b)("inlineCode",{parentName:"p"},"playButton")," is available from the original component file ",Object(r.b)("inlineCode",{parentName:"p"},"video-player.css"),", and extended and styled in the ",Object(r.b)("inlineCode",{parentName:"p"},"super-video-player.css")," stylesheet as a custom pseudo-element on the ",Object(r.b)("inlineCode",{parentName:"p"},"root")," class. "),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"page.css")," stylesheet can then extend ",Object(r.b)("inlineCode",{parentName:"p"},"super-video-player.css")," and on the ",Object(r.b)("inlineCode",{parentName:"p"},".mainPlayer")," class, style ",Object(r.b)("inlineCode",{parentName:"p"},"playButton")," differently."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* super-video-player.st.css */\n@namespace \"SuperVideoPlayer\";\n:import {\n    -st-from: './video-player.st.css';\n    -st-default: VideoPlayer;\n}\n.root {\n    -st-extends: VideoPlayer;\n}\n.root::playButton {\n    color: gold;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.SuperVideoPlayer__root.VideoPlayer__root {}\n.SuperVideoPlayer__root.VideoPlayer__root .VideoPlayer__playButton {\n    color: gold; \n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* page.st.css */\n@namespace \"Page\";\n:import {\n    -st-from: './super-video-player.st.css';\n    -st-default: SuperVideoPlayer;\n}\n.mainPlayer {\n    -st-extends: SuperVideoPlayer;\n}\n.mainPlayer::playButton {\n    color: silver;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.Page__mainPlayer.SuperVideoPlayer__root {}\n.Page__mainPlayer.SuperVideoPlayer__root .VideoPlayer__playButton {\n    color: silver;\n}\n")),Object(r.b)("h2",{id:"override-custom-pseudo-elements"},"Override custom pseudo-elements"),Object(r.b)("p",null,"You can use CSS classes to override extended pseudo-elements. "),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note"),Object(r.b)("br",{parentName:"p"}),"\n","You can also override native pseudo-elements using ",Object(r.b)("strong",{parentName:"p"},"Stylable's")," custom pseudo-elements but this is not recommended as it can lead to code that's confusing and hard to maintain.")),Object(r.b)("p",null,"In this example, ",Object(r.b)("inlineCode",{parentName:"p"},"root")," extends ",Object(r.b)("inlineCode",{parentName:"p"},"VideoPlayer")," and so any class placed on the ",Object(r.b)("inlineCode",{parentName:"p"},"root")," overrides the pseudo-element."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"@namespace \"SuperVideoPlayer\";\n:import {\n    -st-from: './video-player.st.css';\n    -st-default: VideoPlayer;\n}\n.root {\n    -st-extends: VideoPlayer;\n}\n.playButton { /* override VideoPlayer playButton */\n    color: gold;\n}\n.root::playButton {\n    color: grey;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-css"},"/* CSS output */\n.SuperVideoPlayer__root.VideoPlayer__root {}\n.SuperVideoPlayer__playButton { color: gold; }\n.SuperVideoPlayer__root.VideoPlayer__root .VideoPlayer__playButton { color: grey; }\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note"),Object(r.b)("br",{parentName:"p"}),"\n","Overriding pseudo-elements changes the targeting in the overriding stylesheet and not in the stylesheet being extended.")))}i.isMDXComponent=!0},126:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),i=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=i(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=i(n),b=a,m=d["".concat(s,".").concat(b)]||d[b]||u[b]||r;return n?o.a.createElement(m,l(l({ref:t},p),{},{components:n})):o.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<r;p++)s[p]=n[p];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);